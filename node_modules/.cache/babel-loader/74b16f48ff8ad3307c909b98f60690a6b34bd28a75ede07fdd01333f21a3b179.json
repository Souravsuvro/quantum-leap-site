{"ast":null,"code":"var _jsxFileName = \"G:\\\\CascadeProjects\\\\quantum-leap-site\\\\src\\\\utils\\\\SchemaMarkup.tsx\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\n// Interface for Organization Schema\n\n// Interface for WebSite Schema\n\n// Interface for LocalBusiness Schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Utility component for adding schema markup\nexport const SchemaMarkup = ({\n  type,\n  schemaProps\n}) => {\n  const generateSchema = () => {\n    switch (type) {\n      case 'Organization':\n        return {\n          '@context': 'https://schema.org',\n          '@type': 'Organization',\n          name: schemaProps.name,\n          url: schemaProps.url,\n          logo: schemaProps.logo,\n          description: schemaProps.description,\n          ...(schemaProps.contactPoint && {\n            contactPoint: {\n              '@type': 'ContactPoint',\n              ...schemaProps.contactPoint\n            }\n          }),\n          ...(schemaProps.socialMedia && {\n            sameAs: Object.values(schemaProps.socialMedia || {})\n          })\n        };\n      case 'WebSite':\n        return {\n          '@context': 'https://schema.org',\n          '@type': 'WebSite',\n          name: schemaProps.name,\n          url: schemaProps.url,\n          description: schemaProps.description,\n          ...(schemaProps.searchAction && {\n            potentialAction: {\n              '@type': 'SearchAction',\n              target: schemaProps.searchAction\n            }\n          })\n        };\n      case 'LocalBusiness':\n        return {\n          '@context': 'https://schema.org',\n          '@type': 'LocalBusiness',\n          name: schemaProps.name,\n          description: schemaProps.description,\n          address: {\n            '@type': 'PostalAddress',\n            ...schemaProps.address\n          },\n          ...(schemaProps.telephone && {\n            telephone: schemaProps.telephone\n          }),\n          ...(schemaProps.email && {\n            email: schemaProps.email\n          }),\n          ...(schemaProps.priceRange && {\n            priceRange: schemaProps.priceRange\n          }),\n          ...(schemaProps.openingHours && {\n            openingHoursSpecification: {\n              '@type': 'OpeningHoursSpecification',\n              dayOfWeek: schemaProps.openingHours\n            }\n          })\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"script\", {\n      type: \"application/ld+json\",\n      children: JSON.stringify(generateSchema())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// Predefined schemas for quick use\n_c = SchemaMarkup;\nexport const QuantumLeapsSchema = {\n  organization: {\n    name: 'Quantum Leaps',\n    url: 'https://www.quantumleaps.com',\n    logo: 'https://www.quantumleaps.com/logo.png',\n    description: 'Innovative Healthcare Technology Solutions',\n    contactPoint: {\n      telephone: '+1-555-QUANTUM',\n      email: 'support@quantumleaps.com',\n      contactType: 'Customer Support'\n    },\n    socialMedia: {\n      facebook: 'https://facebook.com/quantumleaps',\n      twitter: 'https://twitter.com/quantumleaps',\n      linkedin: 'https://linkedin.com/company/quantumleaps'\n    }\n  },\n  website: {\n    name: 'Quantum Leaps Healthcare Solutions',\n    url: 'https://www.quantumleaps.com',\n    description: 'Cutting-edge healthcare technology and solutions',\n    searchAction: 'https://www.quantumleaps.com/search?q={search_term_string}'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"SchemaMarkup\");","map":{"version":3,"names":["React","Helmet","jsxDEV","_jsxDEV","SchemaMarkup","type","schemaProps","generateSchema","name","url","logo","description","contactPoint","socialMedia","sameAs","Object","values","searchAction","potentialAction","target","address","telephone","email","priceRange","openingHours","openingHoursSpecification","dayOfWeek","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","QuantumLeapsSchema","organization","contactType","facebook","twitter","linkedin","website","$RefreshReg$"],"sources":["G:/CascadeProjects/quantum-leap-site/src/utils/SchemaMarkup.tsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\n// Interface for Organization Schema\nexport interface OrganizationSchemaProps {\n  name: string;\n  url: string;\n  logo: string;\n  description: string;\n  contactPoint?: {\n    telephone?: string;\n    email?: string;\n    contactType?: string;\n  };\n  socialMedia?: {\n    facebook?: string;\n    twitter?: string;\n    linkedin?: string;\n  };\n}\n\n// Interface for WebSite Schema\nexport interface WebSiteSchemaProps {\n  name: string;\n  url: string;\n  description: string;\n  searchAction?: string;\n}\n\n// Interface for LocalBusiness Schema\nexport interface LocalBusinessSchemaProps {\n  name: string;\n  description: string;\n  address: {\n    streetAddress: string;\n    addressLocality: string;\n    addressRegion: string;\n    postalCode: string;\n    addressCountry: string;\n  };\n  telephone?: string;\n  email?: string;\n  priceRange?: string;\n  openingHours?: string[];\n}\n\n// Utility component for adding schema markup\nexport const SchemaMarkup: React.FC<{\n  type: 'Organization' | 'WebSite' | 'LocalBusiness';\n  schemaProps: OrganizationSchemaProps | WebSiteSchemaProps | LocalBusinessSchemaProps;\n}> = ({ type, schemaProps }) => {\n  const generateSchema = () => {\n    switch (type) {\n    case 'Organization':\n      return {\n        '@context': 'https://schema.org',\n        '@type': 'Organization',\n        name: (schemaProps as OrganizationSchemaProps).name,\n        url: (schemaProps as OrganizationSchemaProps).url,\n        logo: (schemaProps as OrganizationSchemaProps).logo,\n        description: (schemaProps as OrganizationSchemaProps).description,\n        ...(schemaProps as OrganizationSchemaProps).contactPoint && {\n          contactPoint: {\n            '@type': 'ContactPoint',\n            ...(schemaProps as OrganizationSchemaProps).contactPoint\n          }\n        },\n        ...(schemaProps as OrganizationSchemaProps).socialMedia && {\n          sameAs: Object.values((schemaProps as OrganizationSchemaProps).socialMedia || {})\n        }\n      };\n      \n    case 'WebSite':\n      return {\n        '@context': 'https://schema.org',\n        '@type': 'WebSite',\n        name: (schemaProps as WebSiteSchemaProps).name,\n        url: (schemaProps as WebSiteSchemaProps).url,\n        description: (schemaProps as WebSiteSchemaProps).description,\n        ...(schemaProps as WebSiteSchemaProps).searchAction && {\n          potentialAction: {\n            '@type': 'SearchAction',\n            target: (schemaProps as WebSiteSchemaProps).searchAction\n          }\n        }\n      };\n      \n    case 'LocalBusiness':\n      return {\n        '@context': 'https://schema.org',\n        '@type': 'LocalBusiness',\n        name: (schemaProps as LocalBusinessSchemaProps).name,\n        description: (schemaProps as LocalBusinessSchemaProps).description,\n        address: {\n          '@type': 'PostalAddress',\n          ...(schemaProps as LocalBusinessSchemaProps).address\n        },\n        ...(schemaProps as LocalBusinessSchemaProps).telephone && {\n          telephone: (schemaProps as LocalBusinessSchemaProps).telephone\n        },\n        ...(schemaProps as LocalBusinessSchemaProps).email && {\n          email: (schemaProps as LocalBusinessSchemaProps).email\n        },\n        ...(schemaProps as LocalBusinessSchemaProps).priceRange && {\n          priceRange: (schemaProps as LocalBusinessSchemaProps).priceRange\n        },\n        ...(schemaProps as LocalBusinessSchemaProps).openingHours && {\n          openingHoursSpecification: {\n            '@type': 'OpeningHoursSpecification',\n            dayOfWeek: (schemaProps as LocalBusinessSchemaProps).openingHours\n          }\n        }\n      };\n    }\n  };\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(generateSchema())}\n      </script>\n    </Helmet>\n  );\n};\n\n// Predefined schemas for quick use\nexport const QuantumLeapsSchema = {\n  organization: {\n    name: 'Quantum Leaps',\n    url: 'https://www.quantumleaps.com',\n    logo: 'https://www.quantumleaps.com/logo.png',\n    description: 'Innovative Healthcare Technology Solutions',\n    contactPoint: {\n      telephone: '+1-555-QUANTUM',\n      email: 'support@quantumleaps.com',\n      contactType: 'Customer Support'\n    },\n    socialMedia: {\n      facebook: 'https://facebook.com/quantumleaps',\n      twitter: 'https://twitter.com/quantumleaps',\n      linkedin: 'https://linkedin.com/company/quantumleaps'\n    }\n  },\n  website: {\n    name: 'Quantum Leaps Healthcare Solutions',\n    url: 'https://www.quantumleaps.com',\n    description: 'Cutting-edge healthcare technology and solutions',\n    searchAction: 'https://www.quantumleaps.com/search?q={search_term_string}'\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}